generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Activity {
  id        String     @id @default(cuid())
  name      String     @unique
  color     String     @default("#fefefe")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
  TrackRow  TrackRow[]
}

model Track {
  id         String    @id @default(cuid())
  minutes    Int
  date       DateTime
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  trackRowId String
  trackRow   TrackRow  @relation(fields: [trackRowId], references: [id])

  @@unique([date, trackRowId], name: "rowDatePair")
}

model TrackRow {
  id         String    @id @default(cuid())
  activityId String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  weekId     String?
  Track      Track[]
  activity   Activity  @relation(fields: [activityId], references: [id])
  Week       Week?     @relation(fields: [weekId], references: [id])
}

model Week {
  id        String     @id @default(cuid())
  from      DateTime
  isClosed  Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
  TrackRow  TrackRow[]
  userId    String
  User      User       @relation(fields: [userId], references: [clerkId])
}

model User {
  id        String    @id @default(cuid())
  clerkId   String    @unique
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  Week Week[]
}
