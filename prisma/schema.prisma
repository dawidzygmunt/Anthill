// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Activity {
  id        String     @id @default(cuid())
  name      String     @unique
  color     String?    @default("#fefefe")
  TrackRow  TrackRow[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
}

model Track {
  id        String    @id @default(cuid())
  minutes   Int
  date      DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  trackRow   TrackRow @relation(fields: [trackRowId], references: [id])
  trackRowId String

  @@unique(name: "rowDatePair", [date, trackRowId])
}

model TrackRow {
  id           String    @id @default(cuid())
  activity     Activity  @relation(fields: [activityId], references: [id])
  activityId   String
  from         DateTime
  Track        Track[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?
  isDone       Boolean   @default(false)
  Week         Week?     @relation(fields: [weekId], references: [id])
  weekId       String?
  totalMinutes Int       @default(0)

  @@unique([from, activityId])
}

model Week {
  id        String     @id @default(cuid())
  startDate DateTime
  endDate   DateTime
  TrackRow  TrackRow[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?

  @@unique([startDate, endDate])
}
